//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminClientApp.NewsSVC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="New", Namespace="http://schemas.datacontract.org/2004/07/WCF_Project")]
    [System.SerializableAttribute()]
    public partial class New : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalReadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdminClientApp.NewsSVC.Binary photoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> ProbabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdminClientApp.NewsSVC.Ranking[] RankingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int AgencyID {
            get {
                return this.AgencyIDField;
            }
            set {
                if ((this.AgencyIDField.Equals(value) != true)) {
                    this.AgencyIDField = value;
                    this.RaisePropertyChanged("AgencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Abstract {
            get {
                return this.AbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.AbstractField, value) != true)) {
                    this.AbstractField = value;
                    this.RaisePropertyChanged("Abstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> TotalReads {
            get {
                return this.TotalReadsField;
            }
            set {
                if ((this.TotalReadsField.Equals(value) != true)) {
                    this.TotalReadsField = value;
                    this.RaisePropertyChanged("TotalReads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public AdminClientApp.NewsSVC.Binary photo {
            get {
                return this.photoField;
            }
            set {
                if ((object.ReferenceEquals(this.photoField, value) != true)) {
                    this.photoField = value;
                    this.RaisePropertyChanged("photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<float> Probability {
            get {
                return this.ProbabilityField;
            }
            set {
                if ((this.ProbabilityField.Equals(value) != true)) {
                    this.ProbabilityField = value;
                    this.RaisePropertyChanged("Probability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string Classification {
            get {
                return this.ClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassificationField, value) != true)) {
                    this.ClassificationField = value;
                    this.RaisePropertyChanged("Classification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public AdminClientApp.NewsSVC.Ranking[] Rankings {
            get {
                return this.RankingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RankingsField, value) != true)) {
                    this.RankingsField = value;
                    this.RaisePropertyChanged("Rankings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Binary", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Linq")]
    [System.SerializableAttribute()]
    public partial class Binary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BytesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Bytes {
            get {
                return this.BytesField;
            }
            set {
                if ((object.ReferenceEquals(this.BytesField, value) != true)) {
                    this.BytesField = value;
                    this.RaisePropertyChanged("Bytes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ranking", Namespace="http://schemas.datacontract.org/2004/07/WCF_Project")]
    [System.SerializableAttribute()]
    public partial class Ranking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsSVC.INewsService")]
    public interface INewsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetTenNews", ReplyAction="http://tempuri.org/INewsService/GetTenNewsResponse")]
        AdminClientApp.NewsSVC.New[] GetTenNews(string Userinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetTenNews", ReplyAction="http://tempuri.org/INewsService/GetTenNewsResponse")]
        System.Threading.Tasks.Task<AdminClientApp.NewsSVC.New[]> GetTenNewsAsync(string Userinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetSimilarNews", ReplyAction="http://tempuri.org/INewsService/GetSimilarNewsResponse")]
        AdminClientApp.NewsSVC.New[] GetSimilarNews(string Userinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetSimilarNews", ReplyAction="http://tempuri.org/INewsService/GetSimilarNewsResponse")]
        System.Threading.Tasks.Task<AdminClientApp.NewsSVC.New[]> GetSimilarNewsAsync(string Userinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNBestPossitive", ReplyAction="http://tempuri.org/INewsService/GetNBestPossitiveResponse")]
        AdminClientApp.NewsSVC.New[] GetNBestPossitive(string Userinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNBestPossitive", ReplyAction="http://tempuri.org/INewsService/GetNBestPossitiveResponse")]
        System.Threading.Tasks.Task<AdminClientApp.NewsSVC.New[]> GetNBestPossitiveAsync(string Userinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNBestNegative", ReplyAction="http://tempuri.org/INewsService/GetNBestNegativeResponse")]
        AdminClientApp.NewsSVC.New[] GetNBestNegative(string Userinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNBestNegative", ReplyAction="http://tempuri.org/INewsService/GetNBestNegativeResponse")]
        System.Threading.Tasks.Task<AdminClientApp.NewsSVC.New[]> GetNBestNegativeAsync(string Userinput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddToRanking", ReplyAction="http://tempuri.org/INewsService/AddToRankingResponse")]
        void AddToRanking(AdminClientApp.NewsSVC.Ranking UserRanking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddToRanking", ReplyAction="http://tempuri.org/INewsService/AddToRankingResponse")]
        System.Threading.Tasks.Task AddToRankingAsync(AdminClientApp.NewsSVC.Ranking UserRanking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsPhoto", ReplyAction="http://tempuri.org/INewsService/GetNewsPhotoResponse")]
        byte[] GetNewsPhoto(int NewsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsPhoto", ReplyAction="http://tempuri.org/INewsService/GetNewsPhotoResponse")]
        System.Threading.Tasks.Task<byte[]> GetNewsPhotoAsync(int NewsID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsServiceChannel : AdminClientApp.NewsSVC.INewsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsServiceClient : System.ServiceModel.ClientBase<AdminClientApp.NewsSVC.INewsService>, AdminClientApp.NewsSVC.INewsService {
        
        public NewsServiceClient() {
        }
        
        public NewsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AdminClientApp.NewsSVC.New[] GetTenNews(string Userinput) {
            return base.Channel.GetTenNews(Userinput);
        }
        
        public System.Threading.Tasks.Task<AdminClientApp.NewsSVC.New[]> GetTenNewsAsync(string Userinput) {
            return base.Channel.GetTenNewsAsync(Userinput);
        }
        
        public AdminClientApp.NewsSVC.New[] GetSimilarNews(string Userinput) {
            return base.Channel.GetSimilarNews(Userinput);
        }
        
        public System.Threading.Tasks.Task<AdminClientApp.NewsSVC.New[]> GetSimilarNewsAsync(string Userinput) {
            return base.Channel.GetSimilarNewsAsync(Userinput);
        }
        
        public AdminClientApp.NewsSVC.New[] GetNBestPossitive(string Userinput) {
            return base.Channel.GetNBestPossitive(Userinput);
        }
        
        public System.Threading.Tasks.Task<AdminClientApp.NewsSVC.New[]> GetNBestPossitiveAsync(string Userinput) {
            return base.Channel.GetNBestPossitiveAsync(Userinput);
        }
        
        public AdminClientApp.NewsSVC.New[] GetNBestNegative(string Userinput) {
            return base.Channel.GetNBestNegative(Userinput);
        }
        
        public System.Threading.Tasks.Task<AdminClientApp.NewsSVC.New[]> GetNBestNegativeAsync(string Userinput) {
            return base.Channel.GetNBestNegativeAsync(Userinput);
        }
        
        public void AddToRanking(AdminClientApp.NewsSVC.Ranking UserRanking) {
            base.Channel.AddToRanking(UserRanking);
        }
        
        public System.Threading.Tasks.Task AddToRankingAsync(AdminClientApp.NewsSVC.Ranking UserRanking) {
            return base.Channel.AddToRankingAsync(UserRanking);
        }
        
        public byte[] GetNewsPhoto(int NewsID) {
            return base.Channel.GetNewsPhoto(NewsID);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetNewsPhotoAsync(int NewsID) {
            return base.Channel.GetNewsPhotoAsync(NewsID);
        }
    }
}
